<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAACQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEN+8EVUgvFeVILxXlSC8V5UgvFeVILxXlSC8V5UgvFeVILxXlSC8V5UgvFeVILxXlSC
        8V5UgvFeVILxXlSC8V5UgvFeVILxXlSC8V5UgvFeVILxXlSC8V5UgvFeVILxXlSC8V5UgvFeVILxXlSC
        8V5UgvFeVILxXlSC8V5UgvFeVILxXlSC8V5UgvFeVILxXlSC8V5UgvFeVILxXlSC8V5UgvFeVILxXlSC
        8V5dhuw3AAAAAAAAAAAHXPgnGWn41Bpr+f4aa/n+Gmv5/hpr+f4aa/n+Gmv5/hpr+f4aa/n+Gmv5/hpr
        +f4aa/n+Gmv5/hpr+f4aa/n+Gmv5/hpr+f4aa/n+Gmv5/hpr+f4aa/n+Gmv5/hpr+f4aa/n+Gmv5/hpr
        +f4aa/n+Gmv5/hpr+f4aa/n+Gmv5/hpr+f4aa/n+Gmv5/hpr+f4aa/n+Gmv5/hpr+f4aa/n+Gmv5/hpr
        +f4aa/n+Gmv5/hpr+f4bbPn9Imz2yAxR/xYTUd+eHlzg9SVf4f4lX+H+I2Dj/h9r9f4fa/X+H2v1/h9r
        9f4gafH+JV/h/iVf4f4lX+H+JV/h/iVf4f4lX+L+JF/j/iRg4/4kYOP+I2Dj/iBp8f4fa/X+H2v1/h9r
        9f4fa/X+H2v1/h9r9f4fa/X+H2v1/h9r9f4fa/X+H2v1/h9r9f4fa/X+H2v1/h9r9f4fa/X+H2v1/h9r
        9f4fa/X+H2v1/h9r9f4fa/X+H2v1/h9r9f4fa/X+F2j28wdb+IkuM57nNDad+Tg6n/44Op/+NEOu/iNt
        8v0jbfL9I23y/SNt8v0nZOP9ODqf/jc6of43PKP+NT2m/jQ+qf4zP6v+MkCu/jJBsP4xQbL+MEO1/idj
        5P0jbfL9I23y/SNt8v0jbfL9I23y/SNt8v0jbfL9I23y/SNt8v0jbfL9I23y/SNt8v0jbfL9I23y/SNt
        8v0jbfL9I23y/SNt8v0jbfL9I23y/SNt8v0jbfL9I23y/SNt8v0jbfL9GWjz8Qpg9dAvM53oNjab+To6
        nf46Op3+NkOs/idt7/0nbe/9J23v/Sdt7/0qZOD9Nzyj/jc9pv42Pqj+NT+r/jVArf40Qq/+M0Oy/jJD
        tP4xRLb+MUW4/ilk4v0nbe/9J23v/Sdt7/0nbe/9J23v/Sdt7/0nbe/9J23v/Sdt7/0nbe/9J23v/Sdt
        7/0nbe/9J23v/Sdt7/0nbe/9J23v/Sdt7/0nbe/9J23v/Sdt7/0nbe/9J23v/Sdt7/0nbe/9HWjv8Atf
        8dQvMpvnODaZ+Dw6nP48Opz+OEOq/itt6/0rbev9K23r/Stt6/0uZN79Nz6o/jZAqv42QKz+NkGu/jVD
        sf4zQ7L+M0S1/jJGt/4yRrn+MUe8/ixk4P0rbev9K23r/Stt6/0rbev9K23r/Stt6/0rbev9K23r/Stt
        6/0rbev9K23r/Stt6/0rbev9K23r/Stt6/0rbev9K23r/Stt6/0rbev9K23r/Stt6/0rbev9K23r/Stt
        6/0rbev9IGjs7gxd7tAxMZnlOTeY9z06mv49Opv+OUWq/i9v6P0vb+j9L2/o/S9v6P0wZtz9N0Os/jdC
        rv42RLD+NUWz/jVGtP40R7b+M0i4/jNJu/4ySrz+Mku//jBm3/0vb+j9L2/o/S9v6P0vb+j9L2/o/S9v
        6P0vb+j9L2/o/S9v6P0vb+j9L2/o/S9v6P0vb+j9L2/o/S9v6P0vb+j9L2/o/S9v6P0vb+j9L2/o/S9v
        6P0vb+j9L2/o/S9v6P0vb+j9JGjo7Q5d68wxMJfkOTeY9j07nf48PZ/+Okeu/jJv5f0yb+X9Mm/l/TJv
        5f0zZ9v9OESv/jdGsf42R7T+Nki2/jVIt/40Sbn+NEq7/jNLvf4yTL/+Mk3C/jJn3f0yb+X9Mm/l/TJv
        5f0ycOX9MnDl/TJw5f0ycOX9MnDl/TJv5f0yb+X9Mm/l/TJv5f0yb+X9Mm/l/TJv5f0yb+X9Mm/l/TJv
        5f0yb+X9Mm/l/TJv5f0yb+X9Mm/l/TJv5f0yb+X9Jmjm6w9c6MgwMZnjOTme9j0/of48P6T+Okmx/jVw
        4/01cOP9NXDj/TVw4/02adr9N0i0/jdItv43Sbf+NUu5/jVKu/41TL3+NE2//jNNwP40TsL+Mk/E/jVp
        3P02ceP9NnHj/Tdy5P03cuT9N3Lk/Tdy5P03cuT9N3Lk/TZx4/02ceP9NnHj/TVx4/01cOP9NXDj/TVw
        4/01cOP9NXDj/TVw4/01cOP9NXDj/TVw4/01cOP9NXDj/TVw4/01cOP9KGnl6hFb5MctNaHkNjyk9jpB
        qP45Q6v+N0u3/jJv5f0yb+X9Mm/l/TJv5f0yaN39NEm5/jNKuv40S73+M0y//jJMwf4yTcL+Mk/E/jFQ
        xv4xUsj+MVPK/jNq3/01c+X9NXPl/TVz5f02c+X9NnPl/TZz5f02c+X9NnPl/TVz5f01c+X9NXPl/TRy
        5f00cuX9NHHl/TNx5f0ycOX9Mm/l/TJv5f0yb+X9Mm/l/TJv5f0yb+X9Mm/l/TJv5f0ycOX9J2nl7BBc
        58oqOKjlND6r9jdDrv43RLD+NEy5/jFj2f0xZNr9MmTa/TFk2v0xYNb9Mky//jFMwP4xTcP+MU7E/jBP
        xf4xUcj+MFLK/i9Ty/4wVc3+MFXO/jNt4v01dOf9NHTo/TR16P01dej9NXXo/TV16P01dej9NXXo/TR0
        6P00dOj9NXTn/TR05/00c+f9M3Pn/TJx5/0ycef9MXDn/TJw5/0wb+f9MXDn/TBv5/0wb+f9MXDn/TBv
        5/0ycOf9Jmno7RFe6c4oO6/mL0Gy9zRFtP4zR7f+Mki5/jFIu/4xSr3+MUvA/jBMwf4wTML+L03E/i5O
        xv4uT8j+LlHK/i5SzP4uVM3+LlXP/i5W0P4uV9L+LljU/jJu5f0zdur9NHfq/TR36v00d+r9NHfq/TR3
        6v00d+r9NHfq/TR26v00d+r9M3bq/TN16v0yder9MnTq/TF06v0ydOn9MHLq/TBy6f0ucOr9LnDp/S5w
        6v0ucOn9L3Hp/S1v6v0vcej9I2nr7xFg7NImPbbpLUS4+DFHu/4wSL3+L0m//jBLwf4uS8P+LUzE/i1N
        xv4tT8j+LE/K/ixRzP4sUs7+LFTQ/ixU0P4sVtL+LVjU/ixY1f4sWtf+LFvY/jBw6f0xd+39Mnjt/TJ5
        7f0yeO39Mnjt/TJ47f0yeO39Mnnt/TJ57f0yeO39MXft/TF37f0xdu39MHXs/S917P0wduz9LnPs/TB0
        7P0scez9LnLs/Stw7P0qbuz9LXHs/Spu7P0ucez9IWns8RFg7NckQb3qK0a9+S5Jwf4tS8P+LEzF/ixM
        x/4sTcn+Kk7L/ipPzf4qUc/+KlLQ/ipT0f4rVdP+K1bV/ipY1v4qWdj+KlrZ/ipc2/4rXdv+K17d/i9z
        7P0xeu/9MXrv/TF67/0yeu/9Mnrv/TJ67/0yeu/9Mnrv/TF67/0xeu/9MXrv/TB57/0wee79MHju/S93
        7v0weO39LHXv/S527P0sdO/9LHPs/Sxy7v0qce79K3Ls/Sdu7/0rcuv9IWnu8xJi8NokQ77tKUnF+StM
        x/4rTcn+Kk7L/ilOzP4oUM7+KVHQ/ihS0v4oU9P+KFXW/ilW1/4pWNn+KVnb/ila3P4pXNz+Kl7e/ipf
        3/4qYOH+KmHi/itl5v4rZub+K2jn/ixu6v4ye/H+Mnzx/jJ88f4yfPH+Mnzx/jF88f4xe/H+MXvx/jB6
        8f4yevH+MHrx/i538f4xevH+LHbx/jB58f4qdPH+Lnbx/ity8f4ob/D+LHTw/iVu8P4rc/D+Hmrx9BJk
        8t4hRsfuJkvL+ihPzf4nUND+J1DR/iZR0v4mUtT+JVPW/iZV1/4nV9n+Jljb/iZZ3P4mW97+J13f/ide
        4P4oX+L+KGHk/ihj5f4pY+b+KGXn/ilm6f4pZ+r+K2/u/i+A9P4xfvT+MYD0/jGA9P4xfvT+MX70/jGA
        8/4wfvT+MH7y/jB99P4wfPL+L33z/i568/4wfPD+K3j0/i967f4rd/P+LHbu/it28f4pc/H+K3bu/iRv
        8/4qdOz+HWz19hJm9eIgSs3uJVHQ+idS0/4nU9X+J1PV/iVU1/4lVtn+Jljb/iZZ3P4mWt7+Jlzf/iZe
        4P4nX+L+KGHj/ilj5f4pZOb+KWXo/iln6f4paen+Kmrq/ils7P4sdPD+MoL1/jKE9f4zhPX+M4X1/jOF
        9f4zhPX+M4T1/jOF9f4yg/X+NYX1/jGC9f4zhPX+MoH1/i+A9f4yg/X+LX31/jOC9f4revX+L371/it5
        9f4od/X+LXv1/iVz9f4tefX+Hm/39hRq9+MgUNLtJlTU+ihX1v4nWNj+J1jZ/iZZ2/4nW93+J13e/ihe
        4P4oYOH+KWHj/ihk5P4pZeX+Kmbn/ipp6P4raun+K2zr/ixt7P4sb+3+K3Du/jF78v42iPX+N4r2/jeL
        9v44i/b+OIv2/jiL9v44i/b+OIv2/jiL9P43ivb+OIny/jeJ9v43iPL+N4n0/jaG9P43hvD+MYP2/jaE
        7v4ygvb+M4Hv/jKB8/4vffL+MX7u/ip59f4xfev+I3X39hhu9+Mcae7kJlra+Shb2/4nXN3+KFze/ihe
        4P4oYOH+KWLj/ilk4/4rZuX+Kmfm/ixp5/4sa+n+LGzq/i1u6/4tcez+LnLt/i507/4vdfD+NYLz/juP
        9v47j/f+PJD3/jyQ9/49kPf+PZH3/j2R9/49kff+PZD3/j+T9/48kPf+PpL3/jqP9v49kPb+O432/jiM
        9v49j/b+Non2/j2O9v40h/b+OYr2/jSG9v4xhPb+N4j2/i6A9v43hvb+Jnn39hx1+OMfd/fhJ3fy9ypi
        3/4pYOD+KWLi/ipk4/4qZeT+K2fl/itq5/4sa+n+LW3q/i1v6/4uce3+L3Lu/jB17/4wdvD+MXjx/jF5
        8f45ifX+P5T3/kCU9/5Blvf+QZb3/kKX9/5Cl/f+Qpf3/kKW9v5Cl/b+Qpf2/kOV9P5Blvf+QZLx/kGW
        9/4/kfH+QJT0/j2Q9f4+kO/+O4/3/j6M7P46jvf+Ooru/juM8/43iPP+OInt/jOF9/45hen+LIL49iJ6
        +eMifPngKYH59i5+9P4raeb+K2fl/itp5/4sbOn+LW3q/i5v6/4ucez+L3Pt/jB17v4xd+/+MXjw/jN6
        8f4zfPL+M4Dz/jyP9v5DmPj+Q5r4/kSb+P5Fm/j+Rp34/kad+P5Gnfj+Rp34/kee+P5Hnvj+Rp34/kmf
        +P5FnPj+SZ74/kSa+P5HnPj+RJn4/kKX+P5Hm/j+P5T4/kea+P48kvj+Qpb4/jyR+P46jvj+QJT4/jaK
        +P4/kvj+L4X59iWA++MmgvngLoX59jKH+P4yhfb+LnHr/i5v6/4ucez+L3Ps/i917f4xd+/+MXnw/jJ7
        8f4zffL+NH7z/jWB9P43hPT+QZX4/kad+f5Hn/n+SKD5/kmh+f5Jofn+SqP5/kuj+f5Lo/j+S6P5/kuh
        9/5Lovf+S6L4/kqg9P5Kovn+SJvx/kmi+f5HmvL+SJ71/kab9v5Fl+/+Q5r4/kSS6/5Emfj+QZHt/kKW
        9P4/kPP+Po/s/jqP+P49i+j+NIr59yqG++MphvngMIr69jWM+P43jfj+OI33/jF67/4wd+7+MHnv/jJ7
        8P4zfPH+M37y/jWB8/42hPT+N4X1/jmJ9v5Em/j+SaH5/kqj+f5Lpfn+TKX5/kyn+f5Np/n+Tqj5/k+p
        +f5Rq/n+UKr5/lGr+f5Rq/n+T6n5/lKs+f5OqPn+Uqr5/kym+f5QqPn+Tqb5/kui+f5Rp/n+Rp/5/lCl
        +P5DnPj+TKL4/kWc+P5Cmfj+S5/4/j2V+P5Knfj+NpD59y2M++Qsi/rgNI769jmR+P47kvj+PJT5/j2U
        +f42hPP+NH7y/jWB8/41hPT+NoX1/jiI9v45ivf+O474/keh+f5Mpvr+Taj6/k6p+v5Pqvr+UKv6/lGt
        +v5Trvr+U6/6/lSw+v5Trvj+VbD6/lSt9/5Vrvj+VK/5/lKq8/5Tr/n+TqTw/lKs+P5OovH+T6f1/k2l
        9v5Ln+7+S6X5/kiY6f5Lo/n+R5fs/kmd8/5GmvP+Q5Xq/kKa+f5CkOb+PJb59zGQ++QwkP3fNpL79j2W
        +v4+l/r+P5n6/kGa+v5Bm/n+Ooz3/jeH9/44iff+OYz3/juN+P4+kvn+SqX6/k6p+/5Pq/v+Ua37/lKu
        +/5TsPv+VbL7/lay+/5XtPv+WLX7/lm1+/5bt/v+Wrb7/lu3+/5at/v+WLb7/ly4+/5XtPr+W7b6/lWx
        +v5ZtPr+VrH6/lKt+v5Zsvr+Tqr6/liv+v5Mp/r+U6z6/k2m+v5Jo/r+U6n6/kSf+v5Sp/r+PZn69zWW
        /OQzlf3fOpf89kCb+v5CnPr+Q576/kWg+v5Gofv+SKP7/kCV+v48j/n+PZL6/kGY+/5Nqvv+UK37/lKv
        +/5Tsfv+VbP7/la0+/5Ytvv+Wbf7/lq4+/5cufv+Xbv7/l68+/5dufj+X737/l25+P5eufn+Xrr5/lqz
        9P5cu/v+Vazw/lu4+v5Vq/L+V7H2/lav9/5Rpe7+U6/7/k2d6f5Srvr+S57s/k+m8/5MovP+SJzq/kmk
        +v5Hk+P/Q6D79zmb/eQ3mv7ePp389kSg+/5Fofv+RqP7/kil+/5Jpvv+S6j7/kyq+/5GoPz+Q5z7/lCu
        +/5SsPz+VLL8/lW0/P5Xtfz+Wbf8/lq5/P5bu/z+Xbz8/l6+/P5fv/z+YcH8/mLB/P5kw/z+ZMP8/mXE
        /P5kw/z+YsL8/mbD/P5hwPz+ZMH8/l69/P5hv/z+Xrv8/lu4/P5hvPz+VrX8/mC6+/5Tsfv+W7b7/lSw
        +/5Rrfv+W7P7/kuo+/5asfv+RKT89zyg/eQ+oP3SQqL99kel+/5Jpfz+Sqj8/kuq/P5Nq/z+Tq38/k+u
        /P5RsPz+U7H8/lS0/P5Wtvz+V7f8/lq5/P5buvz+Xbz8/l6+/P5fwPz+YcH8/mPD/P5lxPz+ZsX7/mfH
        /P5mw/n+aMj8/mXC+P5mxPn+ZsX6/mG89P5lxfz+W7Pw/mPC+/5bs/L+Xrn2/ly5+P5Wq+7+Wrn8/lGh
        6P5Ztvv+T6Ls/lSs8/5SqvP+TaDp/lCu+/5JlOD/Sqn890Gm/uRHqP8vb7T31HS49vt2ufb7drv2+3e7
        9vt3u/X8ebz2/Hm+9vx6v/b8e8D2/HzB9vx9wvb8fcP2/HjD+Pxvw/n9YsL8/mLD/f5jxf3+ZMf9/mfI
        /f5oyv3+asv9/mzN/f5tz/3+bs/9/m/P/f5uz/3+bM39/m/O/f5py/3+bMv9/mbH/f5pyP3+ZsX9/mLC
        /f5nxP3+Xr79/mbD/f5au/3+Yr/8/lu6/P5Xt/z+Yrz8/lKy/P5hu/z+S63990Or/+MAAAAA5tfjkeXX
        5PPl2OTz5tjl8+bZ5fPm2eXz59rm8+fa5vPn2+bz6Nvm8+jb5/Po3Ofz6Nzn8+jc5/Pp3Ofz5t3p88LY
        7feS0Pb7bcz9/mrM/v5szv7+bdD9/m/S/v5uzfv+ctT+/m7N+v5vz/v+cND8/mjE9v5t0P7+YLrx/mvL
        /f5gu/P+ZMH3/mPB+v5Zse7+YMP+/lSl6P5gwPz+VKfs/lq09P5XsfX+T6Ho/le2/f5Lld3/UbP+90iw
        /+QAAAAA5tjmkefZ5fPn2ubz59vm8+jb5/Po3Ofz6dzn8+nd6PPp3ejz6d7o8+re6fPq4Onz6uDp8+rg
        6fPq4Onz6+Dq8+vg6vPr4Orz497s86bX9fl70vz9cNL+/nLV/v5z1v7+ddf+/nbY/v511/7+c9X+/nHT
        /v5v0v7+bdD+/mvO/v5qzP7+aMv+/mbJ/v5kx/7+YsT+/mHC/v5fwf7+Xb/+/lu+/f5ZvP3+WLr9/le4
        /f5Vt/3+T7T+90qz/9oAAAAA6Nzokejc5/Pp3efz6d3o8+ne6PPq3unz6uDp8+vg6vPr4Orz6+Hq8+zh
        6/Ps4evz7OLr8+zi6/Ps4uzz7ePs8+3j7PPt4+zz7ePs8+3j7PPt4+zzx9/z9qfa9vqZ2fn7jtr6/Ifb
        /P2F2fz9hNf7/YHV+/2A1Pv9ftL7/X3R+/17z/v9es37/XnM+v14yvr9dsn6/XXH+v1zxvr9csT6/XHD
        +v1vwfr9bsD6/W29+v1rvPn9ZLr75k+4/2QAAAAA6N7okere6PPq4Onz6+Dq8+vg6vPr4erz7OLr8+zi
        6/Pt4+zz7ePs8+3k7PPu5O3z7uXt8+7l7fPu5u7z7ubu8+/m7vPv5u7z7+bu8+/m7vPv5u7z7+bu8+/m
        7vPu5u7z7uXu8+7l7fPu5e3z7uTt8+3k7PPt4+zz7ePs8+zi6/Ps4uvz6+Hq8+vg6vPq4Onz6uDp8+re
        6PPp3ejz6dzn8+jc5/Pn2+bz59rm8+bZ5fPm2OXz5tflkQAAAAAAAAAA6N/okevg6vPr4erz7OLr8+zi
        6/Pt4+zz7eTt8+7l7fPu5e3z7+bu8+/n7vPv5+/z8Ojv8/Do7/Pw6PDz8Onw8/Hp8PPx6fDz8enw8/Hp
        8PPx6fDz8enw8/Hp8PPw6fDz8Ojw8/Do7/Pw6O/z7+fv8+/n7vPv5u7z7uXt8+7l7fPt5Ozz7ePs8+zi
        6/Ps4uvz6+Hq8+vg6vPq4Onz6t7p8+nd6PPp3efz6Nzn8+fb5vPn2ubz5tjjbwAAAAAAAAAA6uHokezi
        6/Pt4+zz7eTs8+7k7fPu5e3z7+bu8+/n7vPw6O/z8Ojv8/Hp8PPx6vDz8erx8/Lr8fPy6/Hz8uzy8/Ls
        8vPz7PLz8+zy8/Pt8vPz7PLz8+3y3fLt8rXz7fOY8evxffLr8GXw6vBj8OrwY/Dq8GPw6u1j8OrtY+3o
        7WPt6O1j7eXtY+3l7WPt5epj6uXqY+rj6mPq4+pj6uDqY+rg6mPq4Opj6t7qY+re6GPr3uhN/8z/BQAA
        AAAAAAAA6uLqfO3j7PPi2un149vp9eTc6fXk3Or15Nzq9eXd6/Xl3+v15N/r9eXe6/Xl3+z15+Dr9efi
        7fTq4+708ez18/Xv9fP17/Xz9fH06ffw9Zzz8PNC////AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA7ubuHu7l7dbu5e3z7+bu8+/n7/Pw6O/z8enw8/Hq8fPy6/Hz8+zy8/Pt
        8/P17vPz9e/18/Xw9fP18fXt9fH01Pbz9rD39Pde/+r/DAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wLt5+0q7uPuLu7p7i7u6e4u7unuLvTp
        7i706fQu9O70LvTu9C707vQu8+7zLPT09Bj///8BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD///////8AAP///////wAAwAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAIAAAAAAAAAAgAAAAAAAAACAAAAAAAAAAIAAAAAAAQAAgAAAAAABAACAAAAAAAEAAIAA
        Af///wAAgAAP////AADAAP////8AAP///////wAA////////AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>